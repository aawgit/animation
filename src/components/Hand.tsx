/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 ./public/models/hand/model2.glb 
*/
// @ts-nocheck
import React, { useRef, useMemo } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function Hand(props: any) {
  const group = useRef();
  const { nodes, materials, animations } = useGLTF("./models/hand/model.glb");

  useMemo(() => {
    materials.DefaultMaterial.color.set("purple");
    materials.DefaultMaterial.roughness = 0.2;
    // materials.someMaterial.transparent = true
    // materials.someMaterial.opacity = 0.5
  }, [materials]);

  // const { actions } = useAnimations(animations, group);
  //0 - wirst joint
  const wrist0 = nodes.Hand.skeleton.bones[0];

  const index0 = nodes.Hand.skeleton.bones[5];
  const index1 = nodes.Hand.skeleton.bones[6];
  const index2 = nodes.Hand.skeleton.bones[7];

  const middle0 = nodes.Hand.skeleton.bones[9];
  const middle1 = nodes.Hand.skeleton.bones[10];
  const middle2 = nodes.Hand.skeleton.bones[11];

  const ring0 = nodes.Hand.skeleton.bones[13];
  const ring1 = nodes.Hand.skeleton.bones[14];
  const ring2 = nodes.Hand.skeleton.bones[15];

  const pinky0 = nodes.Hand.skeleton.bones[17];
  const pinky1 = nodes.Hand.skeleton.bones[18];
  const pinky2 = nodes.Hand.skeleton.bones[19];

  const thumb0 = nodes.Hand.skeleton.bones[1];
  const thumb1 = nodes.Hand.skeleton.bones[2];
  const thumb2 = nodes.Hand.skeleton.bones[3];

  // z is the rotation around palms wide side axis, i.e. natural DoF axis
  // it's the same for wrist bone i.e. index 0
  React.useEffect(() => {
    // bone6.rotation.y = 5;
  }, []);

  useFrame(({ clock }) => {
    index0.rotation.z = Math.sin(clock.elapsedTime * 2) * 0.7 + Math.PI / 3.5;
    index1.rotation.z = index0.rotation.z;
    index2.rotation.z = index0.rotation.z;

    middle0.rotation.z =
      Math.sin(clock.elapsedTime * 2 + Math.PI / 4) * 0.7 + Math.PI / 3.5;
    middle1.rotation.z = middle0.rotation.z;
    middle2.rotation.z = middle0.rotation.z;

    ring0.rotation.z =
      Math.sin(clock.elapsedTime * 2 + Math.PI / 2) * 0.7 + Math.PI / 3.5;
    ring1.rotation.z = ring0.rotation.z;
    ring2.rotation.z = ring0.rotation.z;

    pinky0.rotation.z =
      Math.sin(clock.elapsedTime * 2 + Math.PI) * 0.7 + Math.PI / 3.5;
    pinky1.rotation.z = pinky0.rotation.z;
    pinky2.rotation.z = pinky0.rotation.z;
  });

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Root_Scene">
        <group name="RootNode">
          <group
            name="Armature"
            position={[1.166, 0.123, 0]}
            rotation={[Math.PI / 2, -1.484, -Math.PI]}
            scale={100}
          >
            <primitive object={nodes.HandMain} />
          </group>
          <skinnedMesh
            name="Hand"
            geometry={nodes.Hand.geometry}
            material={materials.DefaultMaterial}
            skeleton={nodes.Hand.skeleton}
            position={[-0.005, 0.054, -0.009]}
            scale={380}
          />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("./models/hand/model.glb");
